#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.
#
ignore '/assets/css/**/*.scss'

compile '/assets/css/*.sass' do
  puts(item.raw_filename)
  filter :sass, filename: item.raw_filename, load_paths: [ '.', '/assets/css/' ], cache: false
end

compile '/*.html' do
  if item.binary?
    # don’t filter binary items
  else
    filter :erb
    layout start_date.future? ? '/default.*' : '/archive.*'
  end
end

#compile "/", rep: :index do
#  filter :erb
#  layout start_date.future? ? '/default.*' : '/archive.*'
#end

compile '/assets/**/*' do
end

route '/assets/css/*.sass' do
  # Compile SASS to CSS
  item.identifier.to_s.gsub('.sass', '.css').sub(/\A\/assets/, '')
end

route '/assets/**/*' do
  item.identifier.to_s.sub(/\A\/assets/, '')
end

#route '/css/app.sass.*' do
#  # Compile app.SASS to app.CSS
#  '/css/app.css'
#end

#route '/css/**/_*' do
#  nil
#end
#
#route '/css/_*' do
#  nil
#end

route '/*.html' do
  if item.binary?
    puts(item.raw_filename)
    item.identifier.chop
  else
    start_date.future? ? '/index.html' : start_date.strftime('/%b%Y.html').downcase
  end
end

#route '/', rep: :index do
#  '/index.html'
#end

#route '/**/index.*' do
#  # /projects/index.md gets written to /projects/index.html
#  item.identifier.without_ext + '.html'
#end

layout '/*', :erb
